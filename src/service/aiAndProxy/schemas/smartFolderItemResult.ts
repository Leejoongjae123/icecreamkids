/**
 * Generated by orval v7.4.1 🍺
 * Do not edit manually.
 * Ai and Proxy API
 * isd / kinder board api doc
 * OpenAPI spec version: v1.1.0
 */
import type { SmartFolderItemResultSmartFolderApiType } from './smartFolderItemResultSmartFolderApiType';
import type { SmartFolderItemResultRootType } from './smartFolderItemResultRootType';
import type { SmartFolderItemResultFileType } from './smartFolderItemResultFileType';
import type { SmartFolderItemResultPublicState } from './smartFolderItemResultPublicState';
import type { DriveItemResult } from './driveItemResult';
import type { LecturePlanResult } from './lecturePlanResult';
import type { LectureReportResult } from './lectureReportResult';
import type { StoryBoardResult } from './storyBoardResult';
import type { DriveItemMemoResult } from './driveItemMemoResult';
import type { StudentResultForList } from './studentResultForList';

export interface SmartFolderItemResult {
  /** 스마트폴더 자료의 id */
  id: number;
  /** api 요청하는 구분(Photo:사진스마트폴더, EducationalData:자료스마트폴더, UserFolder:내폴더) */
  smartFolderApiType: SmartFolderItemResultSmartFolderApiType;
  /** 스마트폴더의 루트 종류(주로 작업) */
  rootType: SmartFolderItemResultRootType;
  /** 상위 스마트폴더 자료의 id */
  parentSmartFolderItemId: number;
  /** 자료의 물리적 키. (DriveItem.key */
  driveItemKey: string;
  /**
   * 자료의 폴더 뎁스.
   * @minimum 1
   * @maximum 10
   */
  depth: number;
  /** 자료의 종류. URL,DOCUMENT,IMAGE,VIDEO,AUDIO,ARCHIVE,LECTURE_PLAN, ... ,ETC */
  fileType: SmartFolderItemResultFileType;
  /**
   * 자료의 이름
   * @maxLength 255
   */
  name: string;
  /** 요청한 사용자가 소유한 파일인지 여부 */
  isMine: boolean;
  /** 자료의 공개 상태. */
  publicState: SmartFolderItemResultPublicState;
  /** 해당 스마트폴더에서 숨김여부 */
  isHidden: boolean;
  /** 소유자 계정 Id */
  ownerAccountId: number;
  /** 소유자 프로필 Id */
  ownerProfileId: number;
  /**
   * 썸네일 표시용 사용자 프로필 조회용 코드
   * @nullable
   */
  userProfileCode?: string | null;
  /**
   * 썸네일 표시용 사용자 프로필 닉네임
   * @nullable
   */
  userProfileName?: string | null;
  /**
   * 썸네일 표시용 사용자 프로필 썸네일 url
   * @nullable
   */
  userProfileThumbUrl?: string | null;
  /** 생성자 계정 Id */
  originalCreatorAccountId: number;
  /** 생성자 프로필 Id */
  originalCreatorProfileId: number;
  /** 자료의 실제 생성/업로드 일 */
  driveItemCreatedAt: string;
  /** 스마트폴더로 분류된 날짜. */
  addedAt: string;
  /** 특정 작업의 아이디가 있다면 그 아이디. */
  taskItemId: number;
  /** 사용자가 이름을 바꾸거나 변경할 수 있는지 여부. */
  userEditable: boolean;
  /** 작성된 메모 수  */
  memoCount: number;
  /** 다른 사람이 복사한 수 */
  copyCount: number;
  /** 다른 사람이 이 자료를 조회한 수 */
  viewCount: number;
  /** 좋아요 수 */
  likeCount: number;
  /** 조회를 요청한 사용자가 좋아요를 했는지 여부 */
  hasLiked: boolean;
  /** 조회를 요청한 사용자가 즐겨찾기를 했는지 여부 */
  isFavorite: boolean;
  /** 댓글 수 */
  replyCount: number;
  /**
   * 대표사진의 url (그리드 리스트용)
   * @nullable
   */
  thumbUrl?: string | null;
  /**
   * 파일의 사이즈(byte)
   * @nullable
   */
  totalSize: number | null;
  driveItemResult?: DriveItemResult;
  /**
   * url 공유가 활성화 되어있을 경우, url code 정보
   * @nullable
   */
  publicUrlItemCode?: string | null;
  lecturePlan?: LecturePlanResult;
  lectureReport?: LectureReportResult;
  storyBoard?: StoryBoardResult;
  memoContents?: DriveItemMemoResult;
  /** stt로 전체 텍스트화 한 내용 */
  sttFullString?: string;
  /** 입력된 stt 전체 내용을를 요약한 내용 */
  sttSummary?: string;
  /**
   * 태깅된 학생 id들
   * @nullable
   */
  studentIds?: (number | null)[] | null;
  /**
   * 태깅된 학생들
   * @nullable
   */
  students?: StudentResultForList[] | null;
  /**
   * 자료 소유자의 프로필 명
   * @nullable
   */
  profileName?: string | null;
  /**
   * 자료 소유자의 프로필 썸네일 url
   * @nullable
   */
  profileImageUrl?: string | null;
  /**
   * 자료 소유자의 프로필 소개글.
   * @nullable
   */
  profileBio?: string | null;
  mine?: boolean;
  favorite?: boolean;
}
